<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="core_8h" kind="file" language="C++">
    <compoundname>core.h</compoundname>
    <includes refid="types_8h" local="yes">projectM-4/types.h</includes>
    <includedby refid="projectM_8h" local="yes">artifacts/projectm-linux-shared-latest/include/projectM-4/projectM.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>artifacts/projectm-linux-shared-latest/include/projectM-4/core.h</label>
        <link refid="core_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>projectM-4/projectM_export.h</label>
        <link refid="projectM__export_8h_source"/>
      </node>
      <node id="2">
        <label>projectM-4/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>artifacts/projectm-linux-shared-latest/include/projectM-4/core.h</label>
        <link refid="core_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>artifacts/projectm-linux-shared-latest/include/projectM-4/projectM.h</label>
        <link refid="projectM_8h"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="core_8h_1ace606c22de64bad2e4f707700505a08f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PROJECTM_EXPORT <ref refid="types_8h_1a04d3124183c4f0d9df05100f11d5ea1b" kindref="member">projectm_handle</ref></type>
        <definition>PROJECTM_EXPORT projectm_handle projectm_create</definition>
        <argsstring>()</argsstring>
        <name>projectm_create</name>
        <briefdescription>
<para>Creates a new projectM instance. </para>
        </briefdescription>
        <detaileddescription>
<para>If this function returns NULL, in most cases the OpenGL context is not initialized, not made current or insufficient to render projectM visuals.</para>
<para><simplesect kind="return"><para>A projectM handle for the newly created instance that must be used in subsequent API calls. NULL if the instance could not be created successfully. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="artifacts/projectm-linux-shared-latest/include/projectM-4/core.h" line="43" column="33" declfile="artifacts/projectm-linux-shared-latest/include/projectM-4/core.h" declline="43" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a3fde836349dadce16b9ffb19d39f5437" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PROJECTM_EXPORT void</type>
        <definition>PROJECTM_EXPORT void projectm_destroy</definition>
        <argsstring>(projectm_handle instance)</argsstring>
        <name>projectm_destroy</name>
        <param>
          <type><ref refid="types_8h_1a04d3124183c4f0d9df05100f11d5ea1b" kindref="member">projectm_handle</ref></type>
          <declname>instance</declname>
        </param>
        <briefdescription>
<para>Destroys the given instance and frees the resources. </para>
        </briefdescription>
        <detaileddescription>
<para>After destroying the handle, it must not be used for any other calls to the API.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>instance</parametername>
</parameternamelist>
<parameterdescription>
<para>A handle returned by <ref refid="core_8h_1ace606c22de64bad2e4f707700505a08f" kindref="member">projectm_create()</ref> or projectm_create_settings(). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="artifacts/projectm-linux-shared-latest/include/projectM-4/core.h" line="52" column="22" declfile="artifacts/projectm-linux-shared-latest/include/projectM-4/core.h" declline="52" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a3fc4c879c1b19e3a70c1a70af534624b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PROJECTM_EXPORT void</type>
        <definition>PROJECTM_EXPORT void projectm_load_preset_file</definition>
        <argsstring>(projectm_handle instance, const char *filename, bool smooth_transition)</argsstring>
        <name>projectm_load_preset_file</name>
        <param>
          <type><ref refid="types_8h_1a04d3124183c4f0d9df05100f11d5ea1b" kindref="member">projectm_handle</ref></type>
          <declname>instance</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>smooth_transition</declname>
        </param>
        <briefdescription>
<para>Loads a preset from the given filename/URL. </para>
        </briefdescription>
        <detaileddescription>
<para>Ideally, the filename should be given as a standard local path. projectM also supports loading &quot;file://&quot; URLs. Additionally, the special filename &quot;idle://&quot; can be used to load the default idle preset, displaying the &quot;M&quot; logo.</para>
<para>Other URL schemas aren&apos;t supported and will cause a loading error.</para>
<para>If the preset can&apos;t be loaded, no switch takes place and the current preset will continue to be displayed. Note that if there&apos;s a transition in progress when calling this function, the transition will be finished immediately, even if the new preset can&apos;t be loaded.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>instance</parametername>
</parameternamelist>
<parameterdescription>
<para>The projectM instance handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The preset filename or URL to load. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>smooth_transition</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, the new preset is smoothly blended over. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="artifacts/projectm-linux-shared-latest/include/projectM-4/core.h" line="71" column="22" declfile="artifacts/projectm-linux-shared-latest/include/projectM-4/core.h" declline="71" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a5a5e2f45222431eecf829ff9d71e4e4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PROJECTM_EXPORT void</type>
        <definition>PROJECTM_EXPORT void projectm_load_preset_data</definition>
        <argsstring>(projectm_handle instance, const char *data, bool smooth_transition)</argsstring>
        <name>projectm_load_preset_data</name>
        <param>
          <type><ref refid="types_8h_1a04d3124183c4f0d9df05100f11d5ea1b" kindref="member">projectm_handle</ref></type>
          <declname>instance</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>smooth_transition</declname>
        </param>
        <briefdescription>
<para>Loads a preset from the data pointer. </para>
        </briefdescription>
        <detaileddescription>
<para>Currently, the preset data is assumed to be in Milkdrop format.</para>
<para>If the preset can&apos;t be loaded, no switch takes place and the current preset will continue to be displayed. Note that if there&apos;s a transition in progress when calling this function, the transition will be finished immediately, even if the new preset can&apos;t be loaded.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>instance</parametername>
</parameternamelist>
<parameterdescription>
<para>The projectM instance handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The preset contents to load. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>smooth_transition</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, the new preset is smoothly blended over. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="artifacts/projectm-linux-shared-latest/include/projectM-4/core.h" line="87" column="22" declfile="artifacts/projectm-linux-shared-latest/include/projectM-4/core.h" declline="87" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a530ba60eb4ad29ad005658e742eb8ffa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PROJECTM_EXPORT void</type>
        <definition>PROJECTM_EXPORT void projectm_reset_textures</definition>
        <argsstring>(projectm_handle instance)</argsstring>
        <name>projectm_reset_textures</name>
        <param>
          <type><ref refid="types_8h_1a04d3124183c4f0d9df05100f11d5ea1b" kindref="member">projectm_handle</ref></type>
          <declname>instance</declname>
        </param>
        <briefdescription>
<para>Reloads all textures. </para>
        </briefdescription>
        <detaileddescription>
<para>Calling this method will clear and reload all textures, including the main rendering texture. Can cause a small delay/lag in rendering. Only use if texture paths were changed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>instance</parametername>
</parameternamelist>
<parameterdescription>
<para>The projectM instance handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="artifacts/projectm-linux-shared-latest/include/projectM-4/core.h" line="98" column="22" declfile="artifacts/projectm-linux-shared-latest/include/projectM-4/core.h" declline="98" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a0354210d492580122e90795446e6ee08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PROJECTM_EXPORT void</type>
        <definition>PROJECTM_EXPORT void projectm_get_version_components</definition>
        <argsstring>(int *major, int *minor, int *patch)</argsstring>
        <name>projectm_get_version_components</name>
        <param>
          <type>int *</type>
          <declname>major</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>minor</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>patch</declname>
        </param>
        <briefdescription>
<para>Returns the runtime library version components as individual integers. </para>
        </briefdescription>
        <detaileddescription>
<para>Components which aren&apos;t required can be set to NULL.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>major</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an int that will be set to the major version. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an int that will be set to the minor version. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>patch</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an int that will be set to the patch version. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="artifacts/projectm-linux-shared-latest/include/projectM-4/core.h" line="109" column="22" declfile="artifacts/projectm-linux-shared-latest/include/projectM-4/core.h" declline="109" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a7f0cc0a15a8af9f606c7f2718eec583f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PROJECTM_EXPORT char *</type>
        <definition>PROJECTM_EXPORT char * projectm_get_version_string</definition>
        <argsstring>()</argsstring>
        <name>projectm_get_version_string</name>
        <briefdescription>
<para>Returns the runtime library version as a string. </para>
        </briefdescription>
        <detaileddescription>
<para>Remember to call <emphasis><ref refid="memory_8h_1a4ab35e7356b052c5faf22830ee55b821" kindref="member">projectm_free_string()</ref></emphasis> on the returned pointer if the data is no longer needed.</para>
<para><simplesect kind="return"><para>The library version in the format major.minor.patch. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="artifacts/projectm-linux-shared-latest/include/projectM-4/core.h" line="119" column="22" declfile="artifacts/projectm-linux-shared-latest/include/projectM-4/core.h" declline="119" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a5da3f2c8d624d74136cd526060af08c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PROJECTM_EXPORT char *</type>
        <definition>PROJECTM_EXPORT char * projectm_get_vcs_version_string</definition>
        <argsstring>()</argsstring>
        <name>projectm_get_vcs_version_string</name>
        <briefdescription>
<para>Returns the VCS revision from which the projectM library was built. </para>
        </briefdescription>
        <detaileddescription>
<para>Can be any text, will mostly contain a Git commit hash. Useful to report bugs.</para>
<para>Remember to call <emphasis><ref refid="memory_8h_1a4ab35e7356b052c5faf22830ee55b821" kindref="member">projectm_free_string()</ref></emphasis> on the returned pointer if the data is no longer needed.</para>
<para><simplesect kind="return"><para>The VCS revision number the projectM library was built from. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="artifacts/projectm-linux-shared-latest/include/projectM-4/core.h" line="131" column="22" declfile="artifacts/projectm-linux-shared-latest/include/projectM-4/core.h" declline="131" declcolumn="22"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Core functions to instantiate, destroy and control projectM. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>2003-2023 projectM Team </para>
</simplesect>
projectM <ndash/> Milkdrop-esque visualisation SDK Copyright (C)2003-2023 projectM Team</para>
<para>This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.</para>
<para>This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.</para>
<para>You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA See &apos;LICENSE.txt&apos; included within this release </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="types_8h" kindref="compound">projectM-4/types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="core_8h_1ace606c22de64bad2e4f707700505a08f" refkind="member"><highlight class="normal">PROJECTM_EXPORT<sp/><ref refid="types_8h_1a04d3124183c4f0d9df05100f11d5ea1b" kindref="member">projectm_handle</ref><sp/><ref refid="core_8h_1ace606c22de64bad2e4f707700505a08f" kindref="member">projectm_create</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="core_8h_1a3fde836349dadce16b9ffb19d39f5437" refkind="member"><highlight class="normal">PROJECTM_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="core_8h_1a3fde836349dadce16b9ffb19d39f5437" kindref="member">projectm_destroy</ref>(<ref refid="types_8h_1a04d3124183c4f0d9df05100f11d5ea1b" kindref="member">projectm_handle</ref><sp/>instance);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="core_8h_1a3fc4c879c1b19e3a70c1a70af534624b" refkind="member"><highlight class="normal">PROJECTM_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="core_8h_1a3fc4c879c1b19e3a70c1a70af534624b" kindref="member">projectm_load_preset_file</ref>(<ref refid="types_8h_1a04d3124183c4f0d9df05100f11d5ea1b" kindref="member">projectm_handle</ref><sp/>instance,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>smooth_transition);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="core_8h_1a5a5e2f45222431eecf829ff9d71e4e4c" refkind="member"><highlight class="normal">PROJECTM_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="core_8h_1a5a5e2f45222431eecf829ff9d71e4e4c" kindref="member">projectm_load_preset_data</ref>(<ref refid="types_8h_1a04d3124183c4f0d9df05100f11d5ea1b" kindref="member">projectm_handle</ref><sp/>instance,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>smooth_transition);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="core_8h_1a530ba60eb4ad29ad005658e742eb8ffa" refkind="member"><highlight class="normal">PROJECTM_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="core_8h_1a530ba60eb4ad29ad005658e742eb8ffa" kindref="member">projectm_reset_textures</ref>(<ref refid="types_8h_1a04d3124183c4f0d9df05100f11d5ea1b" kindref="member">projectm_handle</ref><sp/>instance);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="core_8h_1a0354210d492580122e90795446e6ee08" refkind="member"><highlight class="normal">PROJECTM_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="core_8h_1a0354210d492580122e90795446e6ee08" kindref="member">projectm_get_version_components</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>major,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>minor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>patch);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="core_8h_1a7f0cc0a15a8af9f606c7f2718eec583f" refkind="member"><highlight class="normal">PROJECTM_EXPORT<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="core_8h_1a7f0cc0a15a8af9f606c7f2718eec583f" kindref="member">projectm_get_version_string</ref>();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="core_8h_1a5da3f2c8d624d74136cd526060af08c1" refkind="member"><highlight class="normal">PROJECTM_EXPORT<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="core_8h_1a5da3f2c8d624d74136cd526060af08c1" kindref="member">projectm_get_vcs_version_string</ref>();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>extern<sp/>&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="artifacts/projectm-linux-shared-latest/include/projectM-4/core.h"/>
  </compounddef>
</doxygen>
