<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="memory_8h" kind="file" language="C++">
    <compoundname>memory.h</compoundname>
    <includes refid="types_8h" local="yes">projectM-4/types.h</includes>
    <includedby refid="projectM_8h" local="yes">artifacts/projectm-linux-shared-latest/include/projectM-4/projectM.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>artifacts/projectm-linux-shared-latest/include/projectM-4/memory.h</label>
        <link refid="memory_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>projectM-4/projectM_export.h</label>
        <link refid="projectM__export_8h_source"/>
      </node>
      <node id="2">
        <label>projectM-4/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>artifacts/projectm-linux-shared-latest/include/projectM-4/memory.h</label>
        <link refid="memory_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>artifacts/projectm-linux-shared-latest/include/projectM-4/projectM.h</label>
        <link refid="projectM_8h"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="memory_8h_1afe5f68313f0d584e4097d690306a1324" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PROJECTM_EXPORT char *</type>
        <definition>PROJECTM_EXPORT char * projectm_alloc_string</definition>
        <argsstring>(unsigned int length)</argsstring>
        <name>projectm_alloc_string</name>
        <param>
          <type>unsigned int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Allocates memory for a string and returns the pointer. </para>
        </briefdescription>
        <detaileddescription>
<para>To free the allocated memory, call <ref refid="memory_8h_1a4ab35e7356b052c5faf22830ee55b821" kindref="member">projectm_free_string()</ref>. Do not use free()!</para>
<para><simplesect kind="return"><para>A pointer to a zero-initialized memory area. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="artifacts/projectm-linux-shared-latest/include/projectM-4/memory.h" line="41" column="22" declfile="artifacts/projectm-linux-shared-latest/include/projectM-4/memory.h" declline="41" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="memory_8h_1a4ab35e7356b052c5faf22830ee55b821" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PROJECTM_EXPORT void</type>
        <definition>PROJECTM_EXPORT void projectm_free_string</definition>
        <argsstring>(const char *str)</argsstring>
        <name>projectm_free_string</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Frees the memory of an allocated string. </para>
        </briefdescription>
        <detaileddescription>
<para>Frees the memory allocated by a call to <ref refid="memory_8h_1afe5f68313f0d584e4097d690306a1324" kindref="member">projectm_alloc_string()</ref> or any (const) char* pointers returned by a projectM API call.</para>
<para>Do not use free() to delete the pointer!</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer returned by <ref refid="memory_8h_1afe5f68313f0d584e4097d690306a1324" kindref="member">projectm_alloc_string()</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="artifacts/projectm-linux-shared-latest/include/projectM-4/memory.h" line="53" column="22" declfile="artifacts/projectm-linux-shared-latest/include/projectM-4/memory.h" declline="53" declcolumn="22"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Memory allocation/deallocation helpers. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>2003-2023 projectM Team </para>
</simplesect>
projectM <ndash/> Milkdrop-esque visualisation SDK Copyright (C)2003-2023 projectM Team</para>
<para>This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.</para>
<para>This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.</para>
<para>You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA See &apos;LICENSE.txt&apos; included within this release </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="types_8h" kindref="compound">projectM-4/types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="memory_8h_1afe5f68313f0d584e4097d690306a1324" refkind="member"><highlight class="normal">PROJECTM_EXPORT<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="memory_8h_1afe5f68313f0d584e4097d690306a1324" kindref="member">projectm_alloc_string</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="memory_8h_1a4ab35e7356b052c5faf22830ee55b821" refkind="member"><highlight class="normal">PROJECTM_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="memory_8h_1a4ab35e7356b052c5faf22830ee55b821" kindref="member">projectm_free_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>extern<sp/>&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="artifacts/projectm-linux-shared-latest/include/projectM-4/memory.h"/>
  </compounddef>
</doxygen>
