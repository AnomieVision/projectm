<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="callbacks_8h" kind="file" language="C++">
    <compoundname>callbacks.h</compoundname>
    <includes refid="types_8h" local="yes">projectM-4/types.h</includes>
    <includedby refid="projectM_8h" local="yes">artifacts/projectm-linux-shared-latest/include/projectM-4/projectM.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>artifacts/projectm-linux-shared-latest/include/projectM-4/callbacks.h</label>
        <link refid="callbacks_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>projectM-4/projectM_export.h</label>
        <link refid="projectM__export_8h_source"/>
      </node>
      <node id="2">
        <label>projectM-4/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>artifacts/projectm-linux-shared-latest/include/projectM-4/callbacks.h</label>
        <link refid="callbacks_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>artifacts/projectm-linux-shared-latest/include/projectM-4/projectM.h</label>
        <link refid="projectM_8h"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="callbacks_8h_1a82fc477965dbae40f7ed61b6d5717eea" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* projectm_preset_switch_requested_event) (bool is_hard_cut, void *user_data)</definition>
        <argsstring>)(bool is_hard_cut, void *user_data)</argsstring>
        <name>projectm_preset_switch_requested_event</name>
        <briefdescription>
<para>Callback function that is executed whenever projectM wants to switch to a new preset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is_hard_cut</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, the transition was triggered by a beat-driven event. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>A user-defined data pointer that was provided when registering the callback, e.g. context information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="artifacts/projectm-linux-shared-latest/include/projectM-4/callbacks.h" line="41" column="9" bodyfile="artifacts/projectm-linux-shared-latest/include/projectM-4/callbacks.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="callbacks_8h_1a3d8c2eb1b822279e41afff77618f0b5e" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* projectm_preset_switch_failed_event) (const char *preset_filename, const char *message, void *user_data)</definition>
        <argsstring>)(const char *preset_filename, const char *message, void *user_data)</argsstring>
        <name>projectm_preset_switch_failed_event</name>
        <briefdescription>
<para>Callback function that is executed if a preset change failed. </para>
        </briefdescription>
        <detaileddescription>
<para>The message and filename pointers are only valid inside the callback. Make a copy if these values need to be retained for later use.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>preset_filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The filename of the failed preset. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The error message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>A user-defined data pointer that was provided when registering the callback, e.g. context information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="artifacts/projectm-linux-shared-latest/include/projectM-4/callbacks.h" line="54" column="9" bodyfile="artifacts/projectm-linux-shared-latest/include/projectM-4/callbacks.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="callbacks_8h_1a7138020d441ffaa93e582d2d725c9d16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PROJECTM_EXPORT void</type>
        <definition>PROJECTM_EXPORT void projectm_set_preset_switch_requested_event_callback</definition>
        <argsstring>(projectm_handle instance, projectm_preset_switch_requested_event callback, void *user_data)</argsstring>
        <name>projectm_set_preset_switch_requested_event_callback</name>
        <param>
          <type><ref refid="types_8h_1a04d3124183c4f0d9df05100f11d5ea1b" kindref="member">projectm_handle</ref></type>
          <declname>instance</declname>
        </param>
        <param>
          <type><ref refid="callbacks_8h_1a82fc477965dbae40f7ed61b6d5717eea" kindref="member">projectm_preset_switch_requested_event</ref></type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
<para>Sets a callback function that will be called when a preset change is requested. </para>
        </briefdescription>
        <detaileddescription>
<para>Only one callback can be registered per projectM instance. To remove the callback, use NULL.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>instance</parametername>
</parameternamelist>
<parameterdescription>
<para>The projectM instance handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the callback function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to any data that will be sent back in the callback, e.g. context information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="artifacts/projectm-linux-shared-latest/include/projectM-4/callbacks.h" line="68" column="22" declfile="artifacts/projectm-linux-shared-latest/include/projectM-4/callbacks.h" declline="68" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="callbacks_8h_1a3466617482c1c047562cfb41d6c586a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PROJECTM_EXPORT void</type>
        <definition>PROJECTM_EXPORT void projectm_set_preset_switch_failed_event_callback</definition>
        <argsstring>(projectm_handle instance, projectm_preset_switch_failed_event callback, void *user_data)</argsstring>
        <name>projectm_set_preset_switch_failed_event_callback</name>
        <param>
          <type><ref refid="types_8h_1a04d3124183c4f0d9df05100f11d5ea1b" kindref="member">projectm_handle</ref></type>
          <declname>instance</declname>
        </param>
        <param>
          <type><ref refid="callbacks_8h_1a3d8c2eb1b822279e41afff77618f0b5e" kindref="member">projectm_preset_switch_failed_event</ref></type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
<para>Sets a callback function that will be called when a preset change failed. </para>
        </briefdescription>
        <detaileddescription>
<para>Only one callback can be registered per projectM instance. To remove the callback, use NULL.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>instance</parametername>
</parameternamelist>
<parameterdescription>
<para>The projectM instance handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the callback function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to any data that will be sent back in the callback, e.g. context information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="artifacts/projectm-linux-shared-latest/include/projectM-4/callbacks.h" line="82" column="22" declfile="artifacts/projectm-linux-shared-latest/include/projectM-4/callbacks.h" declline="82" declcolumn="22"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Functions and prototypes for projectM callbacks. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>2003-2023 projectM Team </para>
</simplesect>
projectM <ndash/> Milkdrop-esque visualisation SDK Copyright (C)2003-2023 projectM Team</para>
<para>This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.</para>
<para>This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.</para>
<para>You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA See &apos;LICENSE.txt&apos; included within this release </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="types_8h" kindref="compound">projectM-4/types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="callbacks_8h_1a82fc477965dbae40f7ed61b6d5717eea" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="callbacks_8h_1a82fc477965dbae40f7ed61b6d5717eea" kindref="member">projectm_preset_switch_requested_event</ref>)(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_hard_cut,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="callbacks_8h_1a3d8c2eb1b822279e41afff77618f0b5e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="callbacks_8h_1a3d8c2eb1b822279e41afff77618f0b5e" kindref="member">projectm_preset_switch_failed_event</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>preset_filename,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>message,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="callbacks_8h_1a7138020d441ffaa93e582d2d725c9d16" refkind="member"><highlight class="normal">PROJECTM_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="callbacks_8h_1a7138020d441ffaa93e582d2d725c9d16" kindref="member">projectm_set_preset_switch_requested_event_callback</ref>(<ref refid="types_8h_1a04d3124183c4f0d9df05100f11d5ea1b" kindref="member">projectm_handle</ref><sp/>instance,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callbacks_8h_1a82fc477965dbae40f7ed61b6d5717eea" kindref="member">projectm_preset_switch_requested_event</ref><sp/>callback,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="callbacks_8h_1a3466617482c1c047562cfb41d6c586a1" refkind="member"><highlight class="normal">PROJECTM_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="callbacks_8h_1a3466617482c1c047562cfb41d6c586a1" kindref="member">projectm_set_preset_switch_failed_event_callback</ref>(<ref refid="types_8h_1a04d3124183c4f0d9df05100f11d5ea1b" kindref="member">projectm_handle</ref><sp/>instance,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callbacks_8h_1a3d8c2eb1b822279e41afff77618f0b5e" kindref="member">projectm_preset_switch_failed_event</ref><sp/>callback,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>extern<sp/>&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="artifacts/projectm-linux-shared-latest/include/projectM-4/callbacks.h"/>
  </compounddef>
</doxygen>
